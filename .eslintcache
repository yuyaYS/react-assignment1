[{"/home/yuya/Desktop/react-assignment1/src/index.js":"1","/home/yuya/Desktop/react-assignment1/src/MyApp.js":"2","/home/yuya/Desktop/react-assignment1/src/Table.js":"3","/home/yuya/Desktop/react-assignment1/src/Form.js":"4"},{"size":169,"mtime":1610769378137,"results":"5","hashOfConfig":"6"},{"size":1849,"mtime":1610771473547,"results":"7","hashOfConfig":"6"},{"size":837,"mtime":1610769378137,"results":"8","hashOfConfig":"6"},{"size":1032,"mtime":1610769378137,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1qrawix",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/yuya/Desktop/react-assignment1/src/index.js",[],["21","22"],"/home/yuya/Desktop/react-assignment1/src/MyApp.js",["23"],"import React, {useState,useEffect} from 'react';\nimport Table from './Table'\nimport Form from './Form';\nimport axios from 'axios';\n\n\n// const characters = [\n//     {\n//       name: 'Charlie',\n//       job: 'Janitor',\n//     },\n//     {\n//       name: 'Mac',\n//       job: 'Bouncer',\n//     },\n//     {\n//       name: 'Dee',\n//       job: 'Aspring actress',\n//     },\n//     {\n//       name: 'Dennis',\n//       job: 'Bartender',\n//     },\n// ];\n\nfunction MyApp() {\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n   fetchAll().then( result => {\n      if (result)\n         setCharacters(result);\n    });\n}, [] );\n\n    return (\n        <div className=\"container\">\n          <Table characterData={characters} removeCharacter ={removeOneCharacter}/>\n        <Form handleSubmit={updateList}/>\n        </div>\n      )\n\n  function removeOneCharacter (index) {\n        const updated = characters.filter((character, i) => {\n           return i !== index\n        });\n        setCharacters(updated);\n     }\n\n   function updateList(person) {\n      setCharacters([...characters, person]);\n    }\n\n    async function fetchAll(){\n      try {\n         const response = await axios.get('http://localhost:5000/users');\n         return response.data.users_list;     \n      }\n      catch (error){\n         //We're not handling errors. Just logging into the console.\n         console.log(error); \n         return false;         \n      }\n   }\n\n   async function makePostCall(person){\n    try {\n       const response = await axios.post('http://localhost:5000/users', person);\n       return response;\n    }\n    catch (error) {\n       console.log(error);\n       return false;\n    }\n }\n function updateList(person) { \n  makePostCall(person).then( result => {\n  if (result)\n     setCharacters([...characters, person] );\n  });\n}\n\n}\n\n\n\nexport default MyApp;","/home/yuya/Desktop/react-assignment1/src/Table.js",[],"/home/yuya/Desktop/react-assignment1/src/Form.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":75,"column":11,"nodeType":"32","messageId":"33","endLine":75,"endColumn":21},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-redeclare","'updateList' is already defined.","Identifier","redeclared",["36"],["37"],"no-global-assign","no-unsafe-negation"]